{"remainingRequest":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falexandre/git/vuetify-vuex-typescript-boilerplate/src/pages/features/dashboard/components/card-control-modules.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/src/pages/features/dashboard/components/card-control-modules.vue","mtime":1570559778516},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1568228101171},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/babel-loader/lib/index.js","mtime":1568228098565},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/ts-loader/index.js","mtime":1568228100966},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/vuetify-loader/lib/loader.js","mtime":1568228103436},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1568228101171},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/vue-loader/lib/index.js","mtime":1568228101849}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport Component from \"vue-class-component\";\n\n@Component({})\nexport default class CardControlModules extends Vue {\n\n    dialog = false;\n    loading = false;\n    message: any = \"\";\n\n    created() {\n        // this.$store.dispatch(\"getActiveModulescIntegratios\");\n        // this.$store.dispatch(\"getExecutedFlowsIntegratios\");\n    }\n\n    get values(): any {\n        const funSort = (acc: any, curr: any): any => {\n            if (acc.description > curr.description) return 1;\n            if (acc.description < curr.description) return -1;\n        };\n        return [...this.$store.state.integration.actived_modules].sort(funSort);\n\n    }\n\n    get flowNotExecutedValues() {\n        return [...this.$store.state.integration.executed_flows].filter(val => !val.dateWhen);\n    }\n\n    get managementPanelActive() {\n        return [...this.values].some(val => val.enabled === false && val.module === \"MANAGEMENT_PANEL\");\n    }\n\n    getIconList(value: boolean): string {\n        return value ? \"done\" : \"close\";\n    }\n\n    getMessageList(value: boolean): any {\n        return value ? \"\" : this.$t(\"messages.activate\");\n    }\n\n    activeModule(item: any): any {\n        if (!item.enabled) {\n            if (this.managementPanelActive && item.module !== \"MANAGEMENT_PANEL\") {\n                this.message = this.$t(\"messages.dashboard_card_module_alert_pendent_management_panel\");\n                return this.dialog = true;\n            }\n            if (this.flowNotExecutedValues.length) {\n                this.message = this.$t(\"messages.dashboard_card_module_alert_pendent_flow\");\n                return this.dialog = true;\n            }\n            this.$confirm(this.$t(\"messages.dashboard_card_active_modules_confirm\", { module: item.description }))\n                .then((res: boolean) => res && this.executeActiveModule(item.module));\n        }\n    }\n\n    executeActiveModule(module: string) {\n        this.loading = true;\n        this.$store.dispatch(\"enabledModuleIntegratios\", module)\n            .then(() => this.$store.dispatch(\"getActiveModulescIntegratios\"))\n            .finally(() => this.loading = false);\n    }\n\n}\n",{"version":3,"sources":["card-control-modules.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"card-control-modules.vue","sourceRoot":"src/pages/features/dashboard/components","sourcesContent":["<template>\n\t\t<div>\n\t\t\t\t<v-layout justify-center>\n\t\t\t\t\t\t<v-dialog max-width=\"400\" persistent v-model=\"dialog\">\n\t\t\t\t\t\t\t\t<v-card>\n\t\t\t\t\t\t\t\t\t\t<v-toolbar color=\"warning\" dark>\n\t\t\t\t\t\t\t\t\t\t\t\t<v-icon>warning</v-icon>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"headline ml-2\">{{$t(\"messages.alert\")}}</span>\n\t\t\t\t\t\t\t\t\t\t</v-toolbar>\n\t\t\t\t\t\t\t\t\t\t<v-card-text v-text=\"message\"/>\n\t\t\t\t\t\t\t\t\t\t<v-card-actions>\n\t\t\t\t\t\t\t\t\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t\t\t\t\t\t\t\t\t<v-btn @click=\"dialog = false\" color=\"blue darken-1\" text>{{$t(\"messages.ok\")}}</v-btn>\n\t\t\t\t\t\t\t\t\t\t</v-card-actions>\n\t\t\t\t\t\t\t\t</v-card>\n\t\t\t\t\t\t</v-dialog>\n\t\t\t\t</v-layout>\n\t\t\t\t<v-card :loading=\"loading\">\n\t\t\t\t\t\t<v-toolbar color=\"primary\" dense dark>\n\t\t\t\t\t\t\t\t<v-toolbar-title>{{$t('messages.dashboard_card_active_modules_title')}}</v-toolbar-title>\n\t\t\t\t\t\t</v-toolbar>\n\t\t\t\t\t\t<v-card-text>\n\t\t\t\t\t\t\t\t<v-row dense>\n\t\t\t\t\t\t\t\t\t\t<v-col cols=\"6\" v-for=\"(item, key) in values\" :key=\"key\">\n\t\t\t\t\t\t\t\t\t\t\t\t<v-layout align-center>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<v-flex>{{ item.description }}</v-flex>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<v-flex class=\"text-right\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<v-tooltip left>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<template v-slot:activator=\"{ on }\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<v-btn :color=\"item.enabled ? 'success' : 'error'\" dark\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t @click=\"activeModule(item)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t v-on=\"on\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<v-icon>{{getIconList(item.enabled)}}</v-icon>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{getMessageList(item.enabled)}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{{item.enabled ? $t('messages.module_already_active') : $t('messages.enable_module')}}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</v-tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</v-flex>\n\t\t\t\t\t\t\t\t\t\t\t\t</v-layout>\n\t\t\t\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t\t</v-row>\n\t\t\t\t\t\t</v-card-text>\n\t\t\t\t</v-card>\n\t\t</div>\n</template>\n\n<script lang=\"ts\">\n    import Vue from \"vue\";\n    import Component from \"vue-class-component\";\n\n    @Component({})\n    export default class CardControlModules extends Vue {\n\n        dialog = false;\n        loading = false;\n        message: any = \"\";\n\n        created() {\n            // this.$store.dispatch(\"getActiveModulescIntegratios\");\n            // this.$store.dispatch(\"getExecutedFlowsIntegratios\");\n        }\n\n        get values(): any {\n            const funSort = (acc: any, curr: any): any => {\n                if (acc.description > curr.description) return 1;\n                if (acc.description < curr.description) return -1;\n            };\n            return [...this.$store.state.integration.actived_modules].sort(funSort);\n\n        }\n\n        get flowNotExecutedValues() {\n            return [...this.$store.state.integration.executed_flows].filter(val => !val.dateWhen);\n        }\n\n        get managementPanelActive() {\n            return [...this.values].some(val => val.enabled === false && val.module === \"MANAGEMENT_PANEL\");\n        }\n\n        getIconList(value: boolean): string {\n            return value ? \"done\" : \"close\";\n        }\n\n        getMessageList(value: boolean): any {\n            return value ? \"\" : this.$t(\"messages.activate\");\n        }\n\n        activeModule(item: any): any {\n            if (!item.enabled) {\n                if (this.managementPanelActive && item.module !== \"MANAGEMENT_PANEL\") {\n                    this.message = this.$t(\"messages.dashboard_card_module_alert_pendent_management_panel\");\n                    return this.dialog = true;\n                }\n                if (this.flowNotExecutedValues.length) {\n                    this.message = this.$t(\"messages.dashboard_card_module_alert_pendent_flow\");\n                    return this.dialog = true;\n                }\n                this.$confirm(this.$t(\"messages.dashboard_card_active_modules_confirm\", { module: item.description }))\n                    .then((res: boolean) => res && this.executeActiveModule(item.module));\n            }\n        }\n\n        executeActiveModule(module: string) {\n            this.loading = true;\n            this.$store.dispatch(\"enabledModuleIntegratios\", module)\n                .then(() => this.$store.dispatch(\"getActiveModulescIntegratios\"))\n                .finally(() => this.loading = false);\n        }\n\n    }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}