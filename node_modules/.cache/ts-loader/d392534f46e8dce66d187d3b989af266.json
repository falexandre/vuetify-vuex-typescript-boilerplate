{"remainingRequest":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/babel-loader/lib/index.js!/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/ts-loader/index.js??ref--13-2!/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/vuetify-loader/lib/loader.js!/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/falexandre/git/vuetify-vuex-typescript-boilerplate/src/pages/features/dashboard/components/card-control-modules.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/src/pages/features/dashboard/components/card-control-modules.vue","mtime":1570559778516},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/.babelrc","mtime":1570559778548},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1568228101171},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/babel-loader/lib/index.js","mtime":1568228098565},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/ts-loader/index.js","mtime":1568228100966},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/vuetify-loader/lib/loader.js","mtime":1568228103436},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1568228101171},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/vue-loader/lib/index.js","mtime":1568228101849}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport Vue from \"vue\";\nimport Component from \"vue-class-component\";\nlet CardControlModules = class CardControlModules extends Vue {\n  constructor() {\n    super(...arguments);\n    this.dialog = false;\n    this.loading = false;\n    this.message = \"\";\n  }\n\n  created() {// this.$store.dispatch(\"getActiveModulescIntegratios\");\n    // this.$store.dispatch(\"getExecutedFlowsIntegratios\");\n  }\n\n  get values() {\n    const funSort = (acc, curr) => {\n      if (acc.description > curr.description) return 1;\n      if (acc.description < curr.description) return -1;\n    };\n\n    return [...this.$store.state.integration.actived_modules].sort(funSort);\n  }\n\n  get flowNotExecutedValues() {\n    return [...this.$store.state.integration.executed_flows].filter(val => !val.dateWhen);\n  }\n\n  get managementPanelActive() {\n    return [...this.values].some(val => val.enabled === false && val.module === \"MANAGEMENT_PANEL\");\n  }\n\n  getIconList(value) {\n    return value ? \"done\" : \"close\";\n  }\n\n  getMessageList(value) {\n    return value ? \"\" : this.$t(\"messages.activate\");\n  }\n\n  activeModule(item) {\n    if (!item.enabled) {\n      if (this.managementPanelActive && item.module !== \"MANAGEMENT_PANEL\") {\n        this.message = this.$t(\"messages.dashboard_card_module_alert_pendent_management_panel\");\n        return this.dialog = true;\n      }\n\n      if (this.flowNotExecutedValues.length) {\n        this.message = this.$t(\"messages.dashboard_card_module_alert_pendent_flow\");\n        return this.dialog = true;\n      }\n\n      this.$confirm(this.$t(\"messages.dashboard_card_active_modules_confirm\", {\n        module: item.description\n      })).then(res => res && this.executeActiveModule(item.module));\n    }\n  }\n\n  executeActiveModule(module) {\n    this.loading = true;\n    this.$store.dispatch(\"enabledModuleIntegratios\", module).then(() => this.$store.dispatch(\"getActiveModulescIntegratios\")).finally(() => this.loading = false);\n  }\n\n};\nCardControlModules = __decorate([Component({})], CardControlModules);\nexport default CardControlModules;",{"version":3,"sources":["/home/falexandre/git/vuetify-vuex-typescript-boilerplate/src/pages/features/dashboard/components/card-control-modules.vue"],"names":["__decorate","Vue","Component","CardControlModules","constructor","arguments","dialog","loading","message","created","values","funSort","acc","curr","description","$store","state","integration","actived_modules","sort","flowNotExecutedValues","executed_flows","filter","val","dateWhen","managementPanelActive","some","enabled","module","getIconList","value","getMessageList","$t","activeModule","item","length","$confirm","then","res","executeActiveModule","dispatch","finally"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport Vue from \"vue\";\nimport Component from \"vue-class-component\";\nlet CardControlModules = class CardControlModules extends Vue {\n    constructor() {\n        super(...arguments);\n        this.dialog = false;\n        this.loading = false;\n        this.message = \"\";\n    }\n    created() {\n        // this.$store.dispatch(\"getActiveModulescIntegratios\");\n        // this.$store.dispatch(\"getExecutedFlowsIntegratios\");\n    }\n    get values() {\n        const funSort = (acc, curr) => {\n            if (acc.description > curr.description)\n                return 1;\n            if (acc.description < curr.description)\n                return -1;\n        };\n        return [...this.$store.state.integration.actived_modules].sort(funSort);\n    }\n    get flowNotExecutedValues() {\n        return [...this.$store.state.integration.executed_flows].filter(val => !val.dateWhen);\n    }\n    get managementPanelActive() {\n        return [...this.values].some(val => val.enabled === false && val.module === \"MANAGEMENT_PANEL\");\n    }\n    getIconList(value) {\n        return value ? \"done\" : \"close\";\n    }\n    getMessageList(value) {\n        return value ? \"\" : this.$t(\"messages.activate\");\n    }\n    activeModule(item) {\n        if (!item.enabled) {\n            if (this.managementPanelActive && item.module !== \"MANAGEMENT_PANEL\") {\n                this.message = this.$t(\"messages.dashboard_card_module_alert_pendent_management_panel\");\n                return this.dialog = true;\n            }\n            if (this.flowNotExecutedValues.length) {\n                this.message = this.$t(\"messages.dashboard_card_module_alert_pendent_flow\");\n                return this.dialog = true;\n            }\n            this.$confirm(this.$t(\"messages.dashboard_card_active_modules_confirm\", { module: item.description }))\n                .then((res) => res && this.executeActiveModule(item.module));\n        }\n    }\n    executeActiveModule(module) {\n        this.loading = true;\n        this.$store.dispatch(\"enabledModuleIntegratios\", module)\n            .then(() => this.$store.dispatch(\"getActiveModulescIntegratios\"))\n            .finally(() => this.loading = false);\n    }\n};\nCardControlModules = __decorate([\n    Component({})\n], CardControlModules);\nexport default CardControlModules;\n"]}]}