{"remainingRequest":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/babel-loader/lib/index.js!/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/ts-loader/index.js??ref--13-2!/home/falexandre/git/vuetify-vuex-typescript-boilerplate/src/plugins/confirm.ts","dependencies":[{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/src/plugins/confirm.ts","mtime":1570559778520},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/.babelrc","mtime":1570559778548},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1568228101171},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/babel-loader/lib/index.js","mtime":1568228098565},{"path":"/home/falexandre/git/vuetify-vuex-typescript-boilerplate/node_modules/ts-loader/index.js","mtime":1568228100966}],"contextDependencies":[],"result":["import { Store } from \"@/core/store\";\nexport default {\n  install(Vue, options = {}) {\n    function show(message, opt = {}) {\n      return new Promise(resolve => {\n        opt.message = message;\n        const params = { ...opt,\n          ...options\n        };\n        Store.commit(\"setMessageParams\", params);\n        Store.commit(\"setDialog\", true);\n        Store.subscribe(mutation => {\n          const {\n            type,\n            payload\n          } = mutation;\n\n          if (type === \"setChoice\") {\n            resolve(payload);\n          }\n        });\n      });\n    }\n\n    Vue.prototype[\"$confirm\"] = show;\n  }\n\n};",{"version":3,"sources":["/home/falexandre/git/vuetify-vuex-typescript-boilerplate/src/plugins/confirm.ts"],"names":["Store","install","Vue","options","show","message","opt","Promise","resolve","params","commit","subscribe","mutation","type","payload","prototype"],"mappings":"AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,eAAe;AACXC,EAAAA,OAAO,CAACC,GAAD,EAAMC,OAAO,GAAG,EAAhB,EAAoB;AACvB,aAASC,IAAT,CAAcC,OAAd,EAAuBC,GAAG,GAAG,EAA7B,EAAiC;AAC7B,aAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC5BF,QAAAA,GAAG,CAACD,OAAJ,GAAcA,OAAd;AACA,cAAMI,MAAM,GAAG,EAAE,GAAGH,GAAL;AAAU,aAAGH;AAAb,SAAf;AACAH,QAAAA,KAAK,CAACU,MAAN,CAAa,kBAAb,EAAiCD,MAAjC;AACAT,QAAAA,KAAK,CAACU,MAAN,CAAa,WAAb,EAA0B,IAA1B;AACAV,QAAAA,KAAK,CAACW,SAAN,CAAiBC,QAAD,IAAc;AAC1B,gBAAM;AAAEC,YAAAA,IAAF;AAAQC,YAAAA;AAAR,cAAoBF,QAA1B;;AACA,cAAIC,IAAI,KAAK,WAAb,EAA0B;AACtBL,YAAAA,OAAO,CAACM,OAAD,CAAP;AACH;AACJ,SALD;AAMH,OAXM,CAAP;AAYH;;AACDZ,IAAAA,GAAG,CAACa,SAAJ,CAAc,UAAd,IAA4BX,IAA5B;AACH;;AAjBU,CAAf","sourcesContent":["import { Store } from \"@/core/store\";\nexport default {\n    install(Vue, options = {}) {\n        function show(message, opt = {}) {\n            return new Promise((resolve) => {\n                opt.message = message;\n                const params = { ...opt, ...options };\n                Store.commit(\"setMessageParams\", params);\n                Store.commit(\"setDialog\", true);\n                Store.subscribe((mutation) => {\n                    const { type, payload } = mutation;\n                    if (type === \"setChoice\") {\n                        resolve(payload);\n                    }\n                });\n            });\n        }\n        Vue.prototype[\"$confirm\"] = show;\n    }\n};\n"]}]}